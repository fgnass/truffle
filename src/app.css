* {
  box-sizing: border-box;
  user-select: none;
}

html {
  font-family: system-ui, sans-serif;
  background: #fff;
  color: #000;
}

button {
  background: transparent;
  border: none;
}

h1 span {
  font-weight: 200;
}

#app {
  max-width: 500px;
  margin: 0 auto;
  padding: 1rem;
}

.cols {
  display: grid;
  grid-template-columns: 1fr 1fr 0rem;
  grid-template-rows: repeat(7, minmax(3rem, min-content));
  gap: 0.5em 1em;
  transition: grid-template-columns ease-out 350ms;
}
.cols.manual {
  grid-template-columns: 7fr 7fr 3rem;
  transition-timing-function: ease-in;
}
.clip {
  overflow: hidden;
}
.rows {
  display: grid;
  grid-row-end: span 7;
  grid-template-rows: subgrid;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.roll,
.dice-input {
  display: flex;
  gap: 0.5rem;
  padding: 1rem 0;
}

.scorebox {
  border-bottom: 1px solid #aaa;
  padding: 0 0.1em 0.2em 0;
  display: grid;
  grid-template-columns: 5fr 2fr;
  align-items: end;
  text-align: left;
}
.category {
  justify-self: start;
  width: min(4rem, 100%);
}
.score {
  justify-self: end;
}

.scorecard {
  margin-bottom: 1rem;
  transition: opacity 0.2s;
}
.scene {
  position: fixed;
  inset: 0;
}
.scene[data-throwing="0"] {
  pointer-events: none;
}

.die {
  display: grid;
  grid-template-areas:
    "a . c"
    "e g f"
    "d . b";

  flex: 0 0 auto;
  padding: 0.5em;
  width: 3em;
  height: 3em;

  border-radius: 0.2em;
  /* border: 1px solid #eee; */
  background-color: #eee;
  /* box-shadow: inset 0 0.1em 1px white, inset 0 -0.1em 1px #bbb,
    inset 0.1em 0 1px #d7d7d7, inset -0.1em 0 1px #d7d7d7; */
}

.die:empty {
  background-color: #fff;
  border: 1px solid #eee;
}
.die[data-selected="true"] {
  outline: 2px solid #45b8ff;
}

.rows .die {
  margin-left: auto;
}

.pip {
  align-self: center;
  justify-self: center;
  width: 0.5em;
  height: 0.5em;
  border-radius: 50%;
  background-color: #333;
  box-shadow: inset 0 3px #111, inset 0 -3px #555;
}

.pip:nth-child(2) {
  grid-area: b;
}
.pip:nth-child(3) {
  grid-area: c;
}
.pip:nth-child(4) {
  grid-area: d;
}
.pip:nth-child(5) {
  grid-area: e;
}
.pip:nth-child(6) {
  grid-area: f;
}
/* This selects the last pip of odd-valued dice (1, 3, 5) and positions the pip in the center */
.pip:nth-child(odd):last-child {
  grid-area: g;
}

/* label {
  display: block;
  text-align: left;
  font-size: 11px;
  max-width: 52px;
  text-transform: uppercase;
}
input[type="checkbox"] {
  display: block;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
}
input[type="checkbox"]:focus {
  outline: 0;
}

.toggle {
  height: 31px;
  width: 52px;
  border-radius: 16px;
  display: inline-block;
  position: relative;
  margin: 0;
  background-color: #eee;
  box-shadow: inset 0 0.1em 1px #bbb, inset 0 -0.1em 1px #fff,
    inset 0.1em 0 1px #d7d7d7, inset -0.1em 0 1px #d7d7d7;
  transition: all 0.2s ease;
}
.toggle::after {
  content: "";
  position: absolute;
  top: 3px;
  left: 3px;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background: white;
  box-shadow: 0 1px 2px rgba(44, 44, 44, 0.2);
  transition: all 0.2s cubic-bezier(0.5, 0.1, 0.75, 1.35);
}
.toggle:checked {
  border-color: #654fec;
}
.toggle:checked::after {
  transform: translateX(22px);
}
 */
